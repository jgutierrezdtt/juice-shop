name: Generate SBOM and Publish

on:
  push:
  pull_request:

jobs:
  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest

    steps:
     
   # Step 1: Checkout the target repository and switch to master branch
      - name: Checkout Target Repository (ecosistemas-ios)
        uses: actions/checkout@v3
        with:
          repository: amazing-programming/wrongsecrets
          ref: master # Ensure the workflow checks out the master branch
          token: ${{ secrets.GITHUB_TOKEN }}

# Install cdxgen globally
      - name: Install cdxgen
        run: npm install @cyclonedx/cdxgen

     

              # Generate SBOM
      - name: Generate SBOM
        run: npx cdxgen

            # Validate SBOM file and read contents
      - name: Validate and print SBOM file
        run: |
          if [ -f bom.json ]; then
            echo "SBOM file generated successfully:"
            cat bom.json
          else
            echo "SBOM file not found!" && exit 1
          fi

      - name: Install Trivy from Repository
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
      - name: Scan SBOM with Trivy
        run: |
          if [ -f bom.json ]; then
            echo "Scanning SBOM with Trivy..."
            trivy sbom  bom.json --format table > trivy_report.txt
          else
            echo "SBOM file not found!" && exit 1
          fi

      - name: Scan SBOM with Trivy and Generate SARIF
        run: |
          trivy sbom bom.json --format sarif --output trivy-results.sarif
      
      - name: Upload SARIF to Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      
      - name: Scan SBOM with Trivy and Generate JSON Report
        run: |
          trivy sbom bom.json --format json --output trivy-results.json
      
      - name: Create Issues from Trivy Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jq -c '.Results[] | .Vulnerabilities[]' trivy-results.json | while read vuln; do
            TITLE=$(echo $vuln | jq -r '.Title')
            PACKAGE=$(echo $vuln | jq -r '.PkgName')
            SEVERITY=$(echo $vuln | jq -r '.Severity')
            DESCRIPTION=$(echo $vuln | jq -r '.Description')
            ISSUE_BODY="**Package:** $PACKAGE\n**Severity:** $SEVERITY\n\n$DESCRIPTION"
      
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues \
              -d "{\"title\": \"$SEVERITY: $TITLE\", \"body\": \"$ISSUE_BODY\"}"
          done

      # Step 5: Upload Trivy scan report as an artifact
      - name: Upload Trivy Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy_report
          path: trivy_report.txt

      # Upload SBOM as an artifact
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v3
        with:
          name: sbom
          path: bom.json
